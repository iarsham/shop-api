// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "arshamdev2001@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/category/create": {
            "post": {
                "description": "This endpoint creates a new category in the store. The request body must contain the following information:",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Create New Category",
                "parameters": [
                    {
                        "description": "create category body",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_iarsham_shop-api_internal_dto.CategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.CategoryResponse"
                        }
                    },
                    "409": {
                        "description": "Warn",
                        "schema": {
                            "$ref": "#/definitions/responses.CategoryExistsResponse"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InterServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/category/delete/{pk}": {
            "delete": {
                "description": "This endpoint deletes an existing Category from the store.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Delete exists Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category Slug",
                        "name": "pk",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.DeleteRecordResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.CategoryNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InterServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/category/list": {
            "get": {
                "description": "This endpoint returns a list of all categories in the store.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get All Categories",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.CategoryResponse"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InterServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/category/update/{pk}": {
            "put": {
                "description": "This endpoint updates an existing Category in the store. The request body must contain the following information:",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Update exists Category",
                "parameters": [
                    {
                        "description": "update category body",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_iarsham_shop-api_internal_dto.CategoryRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Category Slug",
                        "name": "pk",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.CategoryResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.CategoryNotFoundResponse"
                        }
                    },
                    "409": {
                        "description": "Warn",
                        "schema": {
                            "$ref": "#/definitions/responses.CategoryDuplicateResponse"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InterServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/comment-likes/{pk}/add/": {
            "post": {
                "description": "handler that is responsible for add like to comment for products.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Likes"
                ],
                "summary": "Add like to comment for products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "pk",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.Success"
                        }
                    },
                    "403": {
                        "description": "Warn",
                        "schema": {
                            "$ref": "#/definitions/responses.OwnerCantLikeCommentResponse"
                        }
                    },
                    "404": {
                        "description": "Warn",
                        "schema": {
                            "$ref": "#/definitions/responses.CommentNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InterServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/comment/{pk}/create/": {
            "post": {
                "description": "handler that is responsible for creating comment for products.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Create comment for products",
                "parameters": [
                    {
                        "description": "Create Comment Body",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_iarsham_shop-api_internal_dto.CommentsRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Product Slug",
                        "name": "pk",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.CommentResponse"
                        }
                    },
                    "404": {
                        "description": "Warn",
                        "schema": {
                            "$ref": "#/definitions/responses.ProductNOTExistsResponse"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InterServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/comment/{pk}/delete/": {
            "delete": {
                "description": "handler that is responsible for deleting comment for products.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Comments"
                ],
                "summary": "Delete comment for products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "pk",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.DeleteRecordResponse"
                        }
                    },
                    "403": {
                        "description": "Warn",
                        "schema": {
                            "$ref": "#/definitions/responses.PermissionAdminAllowedResponse"
                        }
                    },
                    "404": {
                        "description": "Warn",
                        "schema": {
                            "$ref": "#/definitions/responses.CommentNotFoundResponse"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InterServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/otp/send": {
            "post": {
                "description": "This endpoint receives the user's phone in request body and generates an otp. it then sends the otp to the user's phone via sms.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OTP"
                ],
                "summary": "Send OTP",
                "parameters": [
                    {
                        "description": "send otp body",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_iarsham_shop-api_internal_dto.SendOTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.SendOtpOkResponse"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/responses.UserNotFoundResponse"
                        }
                    }
                }
            }
        },
        "/otp/verify": {
            "post": {
                "description": "this endpoint receives the user's otp code in request body.if code match, the verification is successfully.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OTP"
                ],
                "summary": "Verify OTP",
                "parameters": [
                    {
                        "description": "verify otp body",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_iarsham_shop-api_internal_dto.VerifyOTPRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.VerifyOTPResponse"
                        }
                    },
                    "401": {
                        "description": "incorrect",
                        "schema": {
                            "$ref": "#/definitions/responses.OtpIncorrectResponse"
                        }
                    },
                    "410": {
                        "description": "Expired",
                        "schema": {
                            "$ref": "#/definitions/responses.OtpExpiredResponse"
                        }
                    }
                }
            }
        },
        "/product-images/{pk}/create/": {
            "post": {
                "description": "handler that is responsible for creating product images.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Images"
                ],
                "summary": "Create Image for products",
                "parameters": [
                    {
                        "description": "Create Product Image Body",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_iarsham_shop-api_internal_dto.MediaRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Product Slug",
                        "name": "pk",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.CreateProductImagesResponse"
                        }
                    },
                    "409": {
                        "description": "Warn",
                        "schema": {
                            "$ref": "#/definitions/responses.ProductNOTExistsResponse"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InterServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/product/create": {
            "post": {
                "description": "Creates a new product record in the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Create New Product",
                "parameters": [
                    {
                        "description": "create product body",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_iarsham_shop-api_internal_dto.ProductRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Category Slug",
                        "name": "pk",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.ProductResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.CategoryNotFoundResponse"
                        }
                    },
                    "409": {
                        "description": "Warn",
                        "schema": {
                            "$ref": "#/definitions/responses.ProductExistsResponse"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InterServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/product/delete/{pk}": {
            "delete": {
                "description": "This endpoint deletes an existing Product from the store.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Delete exists Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product Slug",
                        "name": "pk",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.DeleteRecordResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.ProductNOTExistsResponse"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InterServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/product/list": {
            "get": {
                "description": "This endpoint returns a list of all Products in the store.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Get All Products",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.ProductResponse"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InterServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/product/update/{pk}": {
            "put": {
                "description": "Update an exists product record in the database.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Update Exists Product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product Slug",
                        "name": "pk",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "update product body",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_iarsham_shop-api_internal_dto.ProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.ProductResponse"
                        }
                    },
                    "409": {
                        "description": "Warn",
                        "schema": {
                            "$ref": "#/definitions/responses.ProductNOTExistsResponse"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InterServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/token/refresh-token": {
            "post": {
                "description": "Create new access token from refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tokens"
                ],
                "summary": "Get New AccessToken",
                "parameters": [
                    {
                        "description": "refresh token body",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_iarsham_shop-api_internal_dto.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.RefreshTokenResponse"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InterServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/": {
            "get": {
                "description": "Retrieve user information by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get User",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.UserResponse"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InterServerErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update user information by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "description": "update user body",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_iarsham_shop-api_internal_dto.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.UserResponse"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InterServerErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/register-login": {
            "post": {
                "description": "Create user with firstname / lastname / phone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Register And Login By Phone",
                "parameters": [
                    {
                        "description": "register and login body",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_iarsham_shop-api_internal_dto.RegisterLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.LoginOKResponse"
                        }
                    },
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/responses.RegisterOKResponse"
                        }
                    },
                    "500": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/responses.InterServerErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_iarsham_shop-api_internal_dto.CategoryRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string",
                    "example": "digital"
                }
            }
        },
        "github_com_iarsham_shop-api_internal_dto.CommentsRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_iarsham_shop-api_internal_dto.MediaRequest": {
            "type": "object",
            "required": [
                "files"
            ],
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/multipart.FileHeader"
                    }
                }
            }
        },
        "github_com_iarsham_shop-api_internal_dto.ProductRequest": {
            "type": "object",
            "required": [
                "category_slug",
                "description",
                "name",
                "price",
                "stock",
                "weight"
            ],
            "properties": {
                "category_slug": {
                    "type": "string",
                    "example": "digital"
                },
                "description": {
                    "type": "string",
                    "maxLength": 300,
                    "minLength": 1,
                    "example": "Contrary to popular belief, Lorem Ipsum is not simply random text"
                },
                "name": {
                    "type": "string",
                    "maxLength": 75,
                    "minLength": 1,
                    "example": "Table"
                },
                "price": {
                    "type": "number",
                    "example": 19.99
                },
                "stock": {
                    "type": "integer",
                    "example": 12
                },
                "weight": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "github_com_iarsham_shop-api_internal_dto.RefreshTokenRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2OTY5NDE4MTcsInBob25lIjoiKzk4OTAyMTMxMjIyNCIsInVzZXJfaWQiOiI1In0.hzmZdfltaMDWaiTwO8IG1uPEyXOsu3JBs6giU2BDeMI"
                }
            }
        },
        "github_com_iarsham_shop-api_internal_dto.RegisterLoginRequest": {
            "type": "object",
            "required": [
                "phone"
            ],
            "properties": {
                "first_name": {
                    "type": "string",
                    "maxLength": 75,
                    "minLength": 1,
                    "example": "James"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 75,
                    "minLength": 1,
                    "example": "Rodriguez"
                },
                "phone": {
                    "type": "string",
                    "maxLength": 13,
                    "minLength": 11,
                    "example": "+989021112299"
                }
            }
        },
        "github_com_iarsham_shop-api_internal_dto.SendOTPRequest": {
            "type": "object",
            "required": [
                "phone"
            ],
            "properties": {
                "phone": {
                    "type": "string",
                    "maxLength": 13,
                    "minLength": 11,
                    "example": "+989021112299"
                }
            }
        },
        "github_com_iarsham_shop-api_internal_dto.UpdateUserRequest": {
            "type": "object",
            "required": [
                "first_name",
                "last_name"
            ],
            "properties": {
                "first_name": {
                    "type": "string",
                    "maxLength": 75,
                    "minLength": 1,
                    "example": "James"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 75,
                    "minLength": 1,
                    "example": "Rodriguez"
                }
            }
        },
        "github_com_iarsham_shop-api_internal_dto.VerifyOTPRequest": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "maxLength": 6,
                    "minLength": 6,
                    "example": "241960"
                }
            }
        },
        "github_com_iarsham_shop-api_internal_models.Comments": {
            "type": "object",
            "properties": {
                "UpdatedAt": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "likes": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "productsSlug": {
                    "type": "string"
                },
                "usersID": {
                    "type": "integer"
                }
            }
        },
        "github_com_iarsham_shop-api_internal_models.ProductImages": {
            "type": "object",
            "properties": {
                "UpdatedAt": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "productsSlug": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "github_com_iarsham_shop-api_internal_models.Products": {
            "type": "object",
            "properties": {
                "UpdatedAt": {
                    "type": "string"
                },
                "category_slug": {
                    "type": "string",
                    "example": "digital"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_iarsham_shop-api_internal_models.Comments"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "Phone Description"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_iarsham_shop-api_internal_models.ProductImages"
                    }
                },
                "isAvailable": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Phone"
                },
                "price": {
                    "type": "number",
                    "example": 599
                },
                "slug": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer",
                    "example": 6
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_iarsham_shop-api_internal_models.Tags"
                    }
                },
                "views": {
                    "type": "integer"
                },
                "weight": {
                    "type": "number",
                    "example": 0.7
                }
            }
        },
        "github_com_iarsham_shop-api_internal_models.Tags": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "multipart.FileHeader": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "header": {
                    "$ref": "#/definitions/textproto.MIMEHeader"
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "responses.CategoryDuplicateResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "category with this title already exists"
                }
            }
        },
        "responses.CategoryExistsResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "this category already exists"
                }
            }
        },
        "responses.CategoryNotFoundResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "category not found"
                }
            }
        },
        "responses.CategoryResponse": {
            "type": "object",
            "properties": {
                "UpdatedAt": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_iarsham_shop-api_internal_models.Products"
                    }
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "example": "Mobile"
                }
            }
        },
        "responses.CommentNotFoundResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "comment not found"
                }
            }
        },
        "responses.CommentResponse": {
            "type": "object",
            "properties": {
                "UpdatedAt": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "likes": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "productsSlug": {
                    "type": "string"
                },
                "usersID": {
                    "type": "integer"
                }
            }
        },
        "responses.CreateProductImagesResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "Created Successfully"
                }
            }
        },
        "responses.DeleteRecordResponse": {
            "type": "object"
        },
        "responses.InterServerErrorResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "Internal server error"
                }
            }
        },
        "responses.LoginOKResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "Success, otp was sent"
                }
            }
        },
        "responses.OtpExpiredResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "otp expired"
                }
            }
        },
        "responses.OtpIncorrectResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "code is incorrect"
                }
            }
        },
        "responses.OwnerCantLikeCommentResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "owner can't like"
                }
            }
        },
        "responses.PermissionAdminAllowedResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "permission not allowed, just admin user can perform this action"
                }
            }
        },
        "responses.ProductExistsResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "this product already exists"
                }
            }
        },
        "responses.ProductNOTExistsResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "product not found"
                }
            }
        },
        "responses.ProductResponse": {
            "type": "object",
            "properties": {
                "UpdatedAt": {
                    "type": "string"
                },
                "category_slug": {
                    "type": "string",
                    "example": "digital"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_iarsham_shop-api_internal_models.Comments"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "example": "Phone Description"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_iarsham_shop-api_internal_models.ProductImages"
                    }
                },
                "isAvailable": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Phone"
                },
                "price": {
                    "type": "number",
                    "example": 599
                },
                "slug": {
                    "type": "string"
                },
                "stock": {
                    "type": "integer",
                    "example": 6
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_iarsham_shop-api_internal_models.Tags"
                    }
                },
                "views": {
                    "type": "integer"
                },
                "weight": {
                    "type": "number",
                    "example": 0.7
                }
            }
        },
        "responses.RefreshTokenResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2OTY5NDE4MTcsInBob25lIjoiKzk4OTAyMTMxMjIyNCIsInVzZXJfaWQiOiI1In0.hzmZdfltaMDWaiTwO8IG1uPEyXOsu3JBs6giU2BDeMI"
                }
            }
        },
        "responses.RegisterOKResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "Success, otp was sent"
                }
            }
        },
        "responses.SendOtpOkResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "otp was sent"
                }
            }
        },
        "responses.Success": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "Success"
                }
            }
        },
        "responses.Token": {
            "type": "object",
            "properties": {
                "access-token": {
                    "type": "string"
                },
                "refresh-token": {
                    "type": "string"
                }
            }
        },
        "responses.UserNotFoundResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string",
                    "example": "user not found"
                }
            }
        },
        "responses.UserResponse": {
            "type": "object",
            "properties": {
                "UpdatedAt": {
                    "type": "string"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_iarsham_shop-api_internal_models.Comments"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "responses.VerifyOTPResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "$ref": "#/definitions/responses.Token"
                }
            }
        },
        "textproto.MIMEHeader": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Authorization": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "localhost:8000",
	BasePath:         "/api/v1/",
	Schemes:          []string{"http", "https"},
	Title:            "Shop API Document",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
